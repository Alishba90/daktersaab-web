import React from "react";
import axios from 'axios';
import { useState } from 'react';

import { useNavigate} from "react-router-dom";
import validator from "validator";

const Hospital=()=>{
let navigate = useNavigate();
const [eValid,setevalid]=useState();
const [pValid,setpvalid]=useState();
const [formValue, setformValue] = React.useState({
    Email: '',
    Password: '',
    Location:"",
    Name:"",
    Phone1:'',
    Phone2:'',
  });


function handleUserInput(e){
setformValue({
      ...formValue,
      [e.target.name]: e.target.value
    });
if(e.target.name==='email'){if(!validator.isEmail(e.target.value)){setevalid(1)}else{setevalid(null)}}
if(e.target.name==='password'){var l=e.target.value.length;console.log(l);if(!l>=8){alert("hi");setpvalid(1)}else{setpvalid(null)}}
}

const submitform = async(e)=>{
  e.preventDefault();
  const days=["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"]
let open=document.getElementsByClassName("open")
let close=document.getElementsByClassName("close")
const timing=[]
for (var i=0;i<days.length;i++){
timing.push({day:days[i],open:open[i],close:close[i]})
}

  
const HospitalObject={
      Name:formValue.Name,
      Location:formValue.Location,
      Password:formValue.Password,
      Email:formValue.Email,
      Phone1:formValue.Phone1,
      Phone2:formValue.Phone2,
      Timings:timing

};
try{
await axios({
      method: "post",url:'http://localhost:5000/api/hospital/',data: HospitalObject})
      .then(res => {if (res.status === 200){console.log(res.data); navigate('./data')}
else{console.log("error in sending data")}

});
}catch(err){console.log(err);}}


return(
    <>
<form  id="hospitaldata" onSubmit={submitform}>

        <label>
            Hospital Name:
            <input type="text" name="name" required value={formValue.Name} onChange={handleUserInput}/>
        </label><br/>
        <label>
            Hospital Location:
            <input type="text" name="location" required value={formValue.Location} onChange={handleUserInput}/>
        </label><br/>

        <label>
            Password:
            <input type="password" name="password" onChange={handleUserInput} value={formValue.Password}  />
        </label>
{pValid &&
<h5 >Password should be of atleast 8 characters</h5>
}
<br/>

        <label>
            Contact:
        </label><br/>

        <label>
            Email:
            <input type="text" name="email" onChange={handleUserInput} value={formValue.Email}/>
        </label>
{eValid &&
<h5 id='emailinvalid' >Email expression is invalid</h5>
}
<br/>
        <label>
            Phone /Telephone 1:
            <input type="text" name="phone1" required minLength={13} value={formValue.Phone1} onChange={handleUserInput}/>
        </label><br/>
        <label>
            Phone /Telephone 2:
            <input type="text" name="phone2" minLength={13} value={formValue.Phone2} onChange={handleUserInput} />
        </label><br/>
        <label>
            For hospitals not operating 24/7 please enter opening and closing timings for each day:<br/>

        </label><br/>
        <label>
        Monday:           
            Open:
            <input type="time" name="monday" className="open"/><br/>
            Close:
            <input type="time" name="monday" className="close"/><br/>

        </label><br/>
        <label>
        Tuesday:
           Open:
            <input type="time" name="tuesday" className="open"/><br/>
            Close:
            <input type="time" name="tuesday" className="close"/><br/>

        </label><br/>
        <label>
        Wednesday:
            Open:
            <input type="time" name="wednesday" className="open"/><br/>
            Close:
            <input type="time" name="wednesday" className="close"/><br/>

        </label><br/>
        <label>
        Thursday:
            Open:
            <input type="time" name="thursday" className="open"/><br/>
            Close:
            <input type="time" name="thursday" className="close"/><br/>

        </label><br/>
        <label>
        Friday:
            Open:
            <input type="time" name="friday" className="open"/><br/>
            Close:
            <input type="time" name="friday" className="close"/><br/>

        </label><br/>
        <label>
        Saturday:
            Open:
            <input type="time" name="saturday" className="open"/><br/>
            Close:
            <input type="time" name="saturday" className="close"/><br/>

        </label><br/>
        <label>
        Sunday:
           Open:
            <input type="time" name="sunday" className="open"/><br/>
            Close:
            <input type="time" name="sunday" className="close"/><br/>

        </label><br/>

<button type="submit" className="btn btn-primary"  id="submitbtn">Sign up</button>
</form>
    </>
  
    )
  }

export default Hospital